# GB Depoyment for UAT & PROD
#CM plus CDs with odd number are Green
#CDs with even numbers are Blue

#Trigger must be none (default is main and it would trigger CI jobs)
trigger:
- none

#TODO not sure if generic agents will suffice
pool: 'ematpil'

parameters:
  - name: environment
    displayName: Environment
    type: string
    default: DigitalHub-UAT
    values:
      - DigitalHub-UAT
      - DigitalHub-PROD
  - name: branch
    displayName: LSSitecoreBranch
    type: string
    default: master

resources:
 repositories:
   - repository: dupa2
     type: github
     endpoint: Poncjuszon
     name: Poncjuszon/Azure_pipelines
     ref: dupa

variables:
  - name: dupa
    value: 'dupa'
  - ${{ if eq(parameters.environment, 'DigitalHub-UAT') }}:
    - name: environmentShort
      value: "UAT"
    - name: azureConnection
      value: 'BIO-DCX-Dev-01-azure-connection'
  - ${{ if eq(parameters.environment, 'DigitalHub-PROD') }}:
    - name: environmentShort
      value: "PROD"
    - name: azureConnection
      value: 'BIO-DCX-Prod-01-azure-connection - Define me first!'

stages:
  - stage: clone
    displayName: "clone repo"
    jobs:
      - job: cloneMainRepo
        displayName: "just clone and see where we are"
        steps:
          - script: echo ${{parameters.branch}}
          - script: echo ${{variables.environmentShort}}
          - script: echo ${{variables.azureConnection}}
            displayName: "asdadsad"

          - script: echo ${{variables.dupa}}
          - powershell: pwd
          - task: AzurePowerShell@5
            inputs:
              azureSubscription: 'Private subscription(0b6d9a4b-556d-4dab-bd4a-e5f78006033d)'
              ScriptType: 'InlineScript'
              Inline: |
                $vm = get-azvm -ComputerName INT
                $resourceG = $vm.ResourceGroupName
                echo '##vso[task.setvariable variable=resourceGroupName]$resourceG'
              azurePowerShellVersion: 'LatestVersion'
          - script: |
              echo $(resourceGroupName) # outputs secondValue
              echo "end of script generated variable"
#          - checkout: dupa2
#            path: .\LS-Sitecore\
#            fetchDepth: 1
#            clean: true
  - template: inerpipe.yml
    parameters: 
      inerparam: "externalinterparam"
            
            
          