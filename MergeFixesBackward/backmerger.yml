# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- release/*

pr:
- none

pool:
  vmImage: windows-latest

variables:
 - group: hermes

steps:
- checkout: self
  persistCredentials: true
  clean: true
  fetchDepth: 0
- task: PowerShell@2
  displayName: 'ReleaseAutoMerge'
  inputs:
    targetType: 'inline'
    script: |
      $ErrorActionPreference = "Stop"
      $env:GH_TOKEN = "$(GH_TOKEN)"

      $currentRelease = "$(Build.SourceBranchName)".replace("v","")
      git checkout "$(Build.SourceBranch)".replace("refs/heads/","")
      $releases = git branch  --list --remote origin/release/v* | % { $_.replace("origin/release/v","").trim() } | Sort-Object {[System.Version]$_}
      $nextRelease = $releases[$releases.IndexOf($currentRelease) + 1]
      if ($nextRelease -eq $null) { $nextRelease = "develop" }

      Write-Host "Porting changes from release $currentRelease >>>>>>>>>>>>>>>"
      Write-Host "Porting changes to $currentRelease <<<<<<<<<<<<<<<"
      gh pr create --base release/v$nextRelease --title "Automerge from release/v$currentRelease to release/v$nextRelease" --body "Porting fixes to all newer releases"
      
      If ($? -ne $true) { 
          Write-Host "Propper PR is already opened. Please review it"
      } else {
          Write-Host "PR has been opened/"
      }
      sleep 10
      gh pr list 


