# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pr:
- none

pool:
  vmImage: windows-2019

parameters:
  - name: PipelineName
    displayName: Name of the pipeline to call
    type: string
    default: false
  - name: TimeToWait
    displayName: Time to wait before checking status of run
    type: string
    default: false
  - name: Configuration
    displayName: configuration of a called pipeline
    type: string
    default: "{
                 'resources': {
                     'repositories': {
                         'self': {
                             'refName': 'refs/heads/dupaa'
                         },
                         'LS-DigitalHub-Sitecore': {
                             'refName': 'develop'
                         }
                     }
                 },
                 'templateParameters': {
                     'environment': 'DigitalHub-QA3'
                 }
             }"


jobs:
  - job: TriggerPipeline
    displayName: "Calling Pipeline"
    variables:
      - group: Hermes
  #  dependsOn: ${{ parameters.dependsOn }}
    steps:
      - task: PowerShell@2
        displayName: "Call pipeline"
        inputs:
          targetType: 'inline'
          script: |
            $ErrorActionPreference = "Stop"
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            $PipelineName = '${{parameters.PipelineName}}'
            $TimeToWait = '${{parameters.TimeToWait}}'
            $Configuration = "${{parameters.Configuration}}"
            $Azure_Pipelines_User = '$(Azure_Pipelines_User)'
            $Azure_Pipelines_User
            write-host "============================================"
            $Configuration
            write-host "============================================"
            #Write-Host "##vso[task.complete result=Failed;]"
            #Write-Host "##vso[task.logissue type=error;] $ErrorMessage"
            #Write-Host "##[debug]Looking for version: "$VersionToDeployCandidate
            #Write-Host "##vso[task.setvariable variable=VersionToDeploy;]$VersionToDeploy"
            #Write-Host "##[debug]Will deploy: $VersionToDeploy"
          showWarnings: true