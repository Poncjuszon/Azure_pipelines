# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pr:
- none
pool:
  vmImage: windows-latest

parameters:
  - name: environment
    default: DigitalHub-QA
    values: 
      - DigitalHub-QA
      - DigitalHub-QA3
      - DigitalHub-QA4
  - name: PlanUrl
    default: none
  - name: ProjectId
    default: none
  - name: HubName
    default: none
  - name: PlanId
    default: none
  - name: JobId
    default: none
  - name: TimelineId
    default: none
  - name: TaskInstanceId
    default: none

steps:
- script: echo Hello, world!
  displayName: 'This is the deployment pipeline for ${{parameters.environment}}'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    sleep 10
  displayName: 'Run a multi-line script'
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $planUri = "${{parameters.PlanUrl}}"
      $projectId = "${{parameters.ProjectId}}"
      $hubName = "${{parameters.HubName}}"
      $planId = "${{parameters.PlanId}}"
      $taskId = "${{parameters.TaskInstanceId}}"
      $jobId = "${{parameters.JobId}}"
      $result = "$(Agent.JobStatus)"
      $base64AuthInfo = "ZW1hdHBpbDo0d200d3R3aGVnYTU1bWN6NG1tbW03cXcyY2VzeWVhZWduY2VkcHlhYnhvZXJod3ZnbGRh"
      $restApiPipelineCallback = "$planUri/$projectId/_apis/distributedtask/hubs/$hubName/plans/$planId/events?api-version=2.0-preview.1"
      $responsebodyCallback = "{ 'name': 'TaskCompleted', 'taskId': '$taskId', 'jobId': '$jobId', 'result': '$result' }"
      $responsebodyCallback
      $result
      Invoke-RestMethod -Uri $restApiPipelineCallback -Verbose -Method Post -ContentType "application/json" -Headers @{Authorization=("Basic {0}" -f $base64AuthInfo)}  -Body $responsebodyCallback
  displayName: 'Return Pipe result'
  condition: ne('${{ parameters.PlanId }}', 'none')